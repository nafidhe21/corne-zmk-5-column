/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    tapping-term-ms = <300>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        to_symbol {
            bindings = <&to 2>;
            key-positions = <36 41>;
        };

        escape {
            bindings = <&kp DELETE>;
            key-positions = <1 2>;
        };

        lcb {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <4 5>;
        };

        lb {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        lsb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 29>;
        };

        rcb {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 7>;
        };

        rb {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        rsb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        passlaptop {
            bindings = <&newpass>;
            key-positions = <19 8 21 22>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        passold: passold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(P) &kp LS(O) &kp LS(I) &kp LS(U) &kp Q &kp W &kp E &kp R &kp N1 &kp N2 &kp N3 &kp N1 &kp N2 &kp N3 &kp EXCL>;
            label = "passold";
        };

        passdev: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6>;
            label = "NEW_MACRO";
        };

        newpass: newpass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp O &kp I &kp U &kp LS(Q) &kp LS(W) &kp LS(E) &kp LS(R) &kp N1 &kp N2 &kp N3 &kp N1 &kp N2 &kp N3 &kp EXCL>;
            label = "NEWPASS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&trans  &kp Q        &kp W           &kp E           &kp R             &kp T                 &kp Y      &kp U                 &kp I                &kp O                 &kp P            &trans
&trans  &kp A        &kp S           &kp D           &kp F             &kp G                 &kp H      &kp J                 &kp K                &kp L                 &kp SEMICOLON    &trans
&trans  &mt LCTRL Z  &mt LEFT_ALT X  &mt LEFT_WIN C  &mt LEFT_SHIFT V  &kp B                 &kp N      &mt RIGHT_SHIFT M     &mt RIGHT_WIN COMMA  &mt RIGHT_ALT PERIOD  &mt RCTRL SLASH  &trans
                                     &kp ESCAPE      &kp BACKSPACE     &mt LEFT_SHIFT TAB    &kp ENTER  &mt LEFT_SHIFT SPACE  &to 1
            >;
        };

        number_layer {
            bindings = <
&trans  &kp F1   &kp F2        &kp F3     &kp F4  &kp F5    &kp F6  &kp F7  &kp F8             &kp F9         &kp F10  &trans
&trans  &kp N1   &kp N2        &kp N3     &kp N4  &kp N5    &kp N6  &kp N7  &kp N8             &kp N9         &kp N0   &trans
&trans  &kp F11  &kp LEFT_ALT  &kp LCTRL  &trans  &trans    &to 3   &trans  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp F12  &trans
                               &to 0      &trans  &trans    &trans  &trans  &to 2
            >;
        };

        symbol {
            bindings = <
&trans  &kp EXCLAMATION    &kp AT_SIGN       &kp HASH       &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp LEFT_BRACE     &kp LEFT_BRACKET  &kp BACKSLASH  &kp PIPE    &kp SLASH      &kp MINUS       &kp EQUAL      &kp TILDE        &kp RIGHT_BRACKET     &kp RIGHT_BRACE        &trans
&trans  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp GRAVE      &kp COMMA   &kp PERIOD     &kp UNDERSCORE  &kp PLUS       &kp RIGHT_SHIFT  &kp RIGHT_ALT         &kp RCTRL              &trans
                                             &to 0          &trans      &trans         &trans          &trans         &to 4
            >;
        };

        navigation_layer {
            bindings = <
&trans  &kp ESC       &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP      &kp LC(Y)  &kp LC(V)        &kp LC(C)      &kp LC(X)      &kp LC(Z)  &trans
&trans  &kp TAB       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN    &kp LEFT   &kp DOWN         &kp UP         &kp RIGHT      &trans     &trans
&trans  &kp LEFT_WIN  &mkp MB1        &trans          &mkp MB2         &trans            &kp CAPS   &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RIGHT_ALT  &kp RCTRL  &trans
                                      &to 0           &trans           &trans            &trans     &trans           &to 4
            >;
        };

        sys_layer {
            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &passold  &passdev  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans    &none     &none   &none   &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none     &trans    &trans  &trans  &trans  &trans
                                    &to 0         &trans        &trans            &trans    &trans    &trans
            >;
        };
    };
};
