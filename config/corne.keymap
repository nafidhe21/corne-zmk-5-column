/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&trans  &kp Q           &kp W           &kp E        &kp R                        &kp T                 &kp Y        &kp U                 &kp I        &kp O            &kp P                   &trans
&trans  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F             &kp G                 &kp H        &mt RIGHT_SHIFT J     &mt RCTRL K  &mt RIGHT_ALT L  &mt LEFT_GUI SEMICOLON  &trans
&trans  &kp Z           &kp X           &kp C        &kp V                        &kp B                 &kp N        &kp M                 &kp COMMA    &kp DOT          &kp FSLH                &trans
                                        &kp ESCAPE   &mt LC(BACKSPACE) BACKSPACE  &mt LEFT_SHIFT TAB    &mt H ENTER  &mt LEFT_SHIFT SPACE  &to 1
            >;
        };

        numsym_layer {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &kp LC(Y)  &kp LC(V)        &kp LC(C)      &kp LC(X)      &kp LC(Z)  &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &kp LEFT   &kp DOWN         &kp UP         &kp RIGHT      &to 3      &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0         &kp CAPS   &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RIGHT_ALT  &kp RCTRL  &trans
                                        &to 0         &trans        &trans               &trans     &trans           &to 2
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp EXCLAMATION    &kp AT_SIGN        &kp HASH         &kp DOLLAR             &kp PERCENT      &kp CARET       &kp AMPERSAND   &kp ASTERISK  &kp TILDE     &kp DELETE    &trans
&trans  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp BACKSLASH    &kp MINUS       &kp LEFT_SHIFT  &kp RCTRL     &kp LEFT_ALT  &kp LEFT_WIN  &trans
&trans  &kp SINGLE_QUOTE   &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp PIPE         &kp UNDERSCORE  &kp EQUAL       &kp PLUS      &trans        &trans        &trans
                                              &to 0            &trans                 &trans           &trans          &trans          &to 4
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW    &kp K_COPY  &kp ESC        &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp C_PLAY_PAUSE      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &kp PG_UP      &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp K_UNDO      &kp K_REDO      &kp K_CUT   &kp PAGE_DOWN  &trans
                        &to 0   &trans   &trans          &trans                &trans          &to 4
            >;
        };

        sys_layer {
            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &trans  &trans  &trans  &trans  &trans
                                    &to 0         &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
